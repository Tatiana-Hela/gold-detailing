// TODO: rename all comments from Russian to English ü§°

const showErrorMessage = () => {
  Swal.fire({
    imageUrl: 'https://i.imgur.com/te0KfzL.png',
    imageWidth: 250,
    imageHeight: 90,
    title: '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ :(',
    html: '<p class="swal-text">–ü–æ—Ç—Ä—ñ–±–Ω–æ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ, –∞–±–æ...</p> <p class="swal-text">–í–∏ –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç–∏ –Ω–∞–º –≤ <a class="swal-text-link" href="https://t.me/Detailing_CarWash" target="_blank" rel="noopener noreferrer">–¢–µ–ª–µ–≥—Ä–∞–º</a></p>',
    showConfirmButton: true,
    showCloseButton: true,
    confirmButtonText: '–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ',
    customClass: {
      title: 'swal-title',
      htmlContainer: 'swal-html-container',
      popup: 'swal-popup-custom',
      showConfirmButton: 'swal-confirm-btn',
      backdrop: 'swal-backdrop',
    },
  });
};

/**
 * @param {HTMLFormElement} form 
 */
const initForm = (form) => {
  if (!form) return;

  const nameInput = form.querySelector('[name="name"]');
  const phoneInput = form.querySelector('[name="phone"]');
  const messageInput = form.querySelector('[name="message"]');
  const nameHint = form.querySelector('.name-hint');
  const phoneHint = form.querySelector('.phone-hint');

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
  const originalPhonePlaceholder = phoneInput.getAttribute('placeholder');
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  document.addEventListener('DOMContentLoaded', () => {
    if (phoneInput.value.trim() === '+380') {
      phoneInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç "+380"
      phoneInput.placeholder = originalPhonePlaceholder; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  phoneInput.addEventListener('focus', () => {
    if (phoneInput.value.trim() === '') {
      phoneInput.value = '+380'; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "+380" –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ
    }
    phoneInput.placeholder = ''; // –°–∫—Ä—ã–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ —Å –ø–æ–ª—è –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  phoneInput.addEventListener('blur', () => {
    if (phoneInput.value.trim() === '+380') {
      phoneInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞, –µ—Å–ª–∏ –æ–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç "+380"
      phoneInput.placeholder = originalPhonePlaceholder; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
    } else if (phoneInput.value.trim() === '') {
      phoneInput.placeholder = originalPhonePlaceholder; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –ø—Ä–∏ –ø—É—Å—Ç–æ–º –ø–æ–ª–µ
    }
  });

  phoneInput.addEventListener('input', () => {
    if (!phoneInput.value.startsWith('+380')) {
      phoneInput.value = '+380'; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º "+380" –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–∏–ª –Ω–∞—á–∞–ª–æ
    }
  });

  form.addEventListener('submit', async function (event) {
    event.preventDefault();

    let valid = true;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏
    const namePattern = /^[–∞-—è–ê-–Ø—ë–Åa-zA-Z—ñ–Ü\s']+$/;
    if (!namePattern.test(nameInput.value) || nameInput.value.length < 2) {
      valid = false;
      nameHint.textContent = "–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–µ —ñ–º'—è (–Ω–µ –º–µ–Ω—à–µ –¥–≤–æ—Ö –±—É–∫–≤)";
    } else {
      nameHint.textContent = '';
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    const phonePattern = /^\+?\d{10,13}$/;
    const minLength = 13;
    const maxLength = 13;

    if (
      !phonePattern.test(phoneInput.value) ||
      phoneInput.value.length < minLength ||
      phoneInput.value.length > maxLength
    ) {
      valid = false;
      phoneHint.textContent = `–í–≤–µ–¥—ñ—Ç—å –∫–æ—Ä–µ–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–ø—Ä–∏–∫–ª–∞–¥ - +380–•–•–•–•–•–•–•–•–•).`;
    } else {
      phoneHint.textContent = '';
    }
    if (!valid) {
      return;
    }

    const smsMessage = `${nameInput.value}, ${phoneInput.value} - –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–ª—ñ—î–Ω—Ç–∞: ${messageInput.value}`;
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –±—ç–∫–µ–Ω–¥ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Axios
    const overlay = document.getElementById('overlay');
    overlay.style.visibility = 'visible';
    try {
      const response = await axios.post(
        'https://golddetailing-backend.onrender.com/submit-form', // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
        {
          message: smsMessage,
        }
      );

      if (response.status === 200) {
        fbq('track', 'Lead');
        Swal.fire({
          imageUrl: 'https://i.imgur.com/xItRRqf.png',
          imageWidth: 250,
          imageHeight: 90,
          title: '–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è!',
          html: '<p class="swal-text">–ú–∏ –∑–≤‚Äô—è–∂–µ–º–æ—Å—å –∑ –í–∞–º–∏ –≤–ø—Ä–æ–¥–æ–≤–∂ <br/> <span class="swal-text-secondary"> 5—Ç–∏ —Ö–≤–∏–ª–∏–Ω </span></p>',
          showConfirmButton: true,
          showCloseButton: true,
          confirmButtonText: '–û–∫',
          customClass: {
            title: 'swal-title-ok',
            htmlContainer: 'swal-html-container',
            popup: 'swal-popup-custom',
            showConfirmButton: 'swal-confirm-btn',
            backdrop: 'swal-backdrop',
          },
        });
        nameInput.value = '';
        phoneInput.value = '';
        phoneInput.placeholder = originalPhonePlaceholder;
        messageInput.value = '';
      } else {
        showErrorMessage();
      }
    } catch (error) {
      showErrorMessage();
    } finally {
      overlay.style.visibility = 'hidden';
    }
  });
};

const commonForm = document.getElementById('call-form');

initForm(commonForm);

document.querySelectorAll('.btn-to-order-service').forEach((btn) => {
  btn.addEventListener('click', () => {
    Swal.fire({
      title: '–û—Ç—Ä–∏–º–∞–π—Ç–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑!',
      html: `
        <form class="call-form__form call-form__form--in-modal" id="callModalForm">
            <input
                class="call-form__form-input"
                type="text"
                id="name"
                placeholder="–í–∞—à–µ —ñ–º‚Äô—è*"
                autocomplete="off"
                name="name"
            />
            <!-- –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è –∏–º–µ–Ω–∏ -->
            <div class="input-hint name-hint"></div>
            
            <input
                class="call-form__form-input"
                type="tel"
                id="phone"
                placeholder="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É*"
                autocomplete="off"
                value="+380"
                name="phone"
            />
            <!-- –ü–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ -->
            <div class="input-hint phone-hint"></div>

            <textarea
                class="call-form__form-textarea"
                id="message"
                placeholder="–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–Ω–µ –æ–±–æ–≤‚Äô—è–∑–∫–æ–≤–æ)"
                name="message"
            ></textarea>

            <button class="call-form__form-btn" type="submit">
                –ü–µ—Ä–µ–¥–∑–≤–æ–Ω—ñ—Ç—å –º–µ–Ω—ñ
            </button>
        </form>
      `,
      showConfirmButton: false,
      showCloseButton: true,
      customClass: {
        title: 'swal-title-ok',
        htmlContainer: 'swal-html-container',
        popup: 'swal-popup-custom swal-popup-custom--with-call-form',
        backdrop: 'swal-backdrop',
      },
    });

    const callModalForm = document.getElementById('callModalForm');

    initForm(callModalForm);
  });
})
